/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { IAuth, IAuthInterface } from "../IAuth";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "evmAddress",
        type: "address",
      },
    ],
    name: "account",
    outputs: [
      {
        internalType: "string",
        name: "stringAddress",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "evmAddress",
        type: "address",
      },
    ],
    name: "addressBytesToString",
    outputs: [
      {
        internalType: "string",
        name: "stringAddress",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "stringAddress",
        type: "string",
      },
    ],
    name: "addressStringToBytes",
    outputs: [
      {
        internalType: "address",
        name: "byteAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bech32Prefix",
    outputs: [
      {
        internalType: "string",
        name: "prefix",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "moduleAccountByName",
    outputs: [
      {
        internalType: "string",
        name: "stringAddress",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IAuth__factory {
  static readonly abi = _abi;
  static createInterface(): IAuthInterface {
    return new Interface(_abi) as IAuthInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IAuth {
    return new Contract(address, _abi, runner) as unknown as IAuth;
  }
}
